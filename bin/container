#!/bin/bash

#------------------------------------------------------------------------------
# Define ROLE and DOMAIN:
#------------------------------------------------------------------------------

ROLE='boot'
DOMAIN='demo.lan'
IP='192.168.1.2'
GW='192.168.1.1'

#------------------------------------------------------------------------------
# Sanity checks:
#------------------------------------------------------------------------------

function usage {
  echo "Usage: $0 [start | stop name]" && exit 1
}

[ $# -lt 1 ] && usage
[ $1 == 'start' ] && [ $# -ne 1 ] && usage
[ $1 == 'stop' ] && [ $# -ne 2 ] && usage
! systemctl -q is-active docker && echo 'Docker is not running' && exit 1

#------------------------------------------------------------------------------
# Whether to start or stop the container:
#------------------------------------------------------------------------------

case $1 in

  start)
    LIST=`docker ps -a | awk '/'$ROLE'[0-9]/ {print $NF}'`
    for ID in `seq -w 99`; do echo $LIST | grep -q $ID || break; done
    echo "··· Starting '${ROLE}${ID}' container"
    CID=$(docker run -t --privileged \
    -v /data/${ROLE}/kickstart:/kickstart \
    -v /data/${ROLE}/dnsmasq:/var/lib/dnsmasq \
    -v /data/${ROLE}/pxelinux:/tftpboot/pxelinux.cfg \
    -v /data/${ROLE}/images:/tftpboot/images \
    -h ${ROLE}${ID}.${DOMAIN} --name ${ROLE}${ID} -d --net=none h0tbird/${ROLE})
    echo "··· Setup container '${ROLE}${ID}' network (pipework)"
    sudo pipework br0 ${ROLE}${ID} ${IP}/24@${GW}
    echo "··· Setup host's /etc/resolv.conf (resolvconf)"
    echo "nameserver ${IP}" | sudo resolvconf -m 0 -a ${ROLE}${ID}
    ;;

  stop)
    echo '··· Restore /etc/resolv.conf'
    sudo resolvconf -d $2
    echo "··· Killing '${2}' container"
    docker ps | grep -wq $2 && ID=$(docker kill $2)
    echo "··· Removing '${2}' container"; sleep 1
    docker ps -a | grep -wq $2 && ID=`docker rm -f $2`
    ;;

esac
